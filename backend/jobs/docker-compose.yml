version: '3.8'

services:

  ### BEGIN auth-server
  db:
    image: postgres:14-alpine
    deploy:
      resources:
        limits:
          memory: 512M
    volumes:
      - ./datastore/keycloak:/var/lib/postgresql/data/pgdata
    environment:
      POSTGRES_DB: ${KEYCLOAK_DB}
      POSTGRES_USER: ${KEYCLOAK_DB_USR}
      POSTGRES_PASSWORD: ${KEYCLOAK_DB_PWD}
      PGDATA: /var/lib/postgresql/data/pgdata

  keycloak:
    image: jboss/keycloak
    deploy:
      resources:
        limits:
          memory: 1024M
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: db
      DB_DATABASE: keycloak
      DB_USER: ${KEYCLOAK_DB_USR}
      DB_SCHEMA: public
      DB_PASSWORD: ${KEYCLOAK_DB_PWD}
      KEYCLOAK_USER: ${KEYCLOAK_USR}
      KEYCLOAK_PASSWORD: ${KEYCLOAK_PWD}
    command:
      - "-Djboss.http.port=9999"
      - "-b 0.0.0.0"
    ports:
      - "9999:9999"
    depends_on:
      db:
        condition: service_started
  ### END auth-server

  job:
    build: microservices/job-service
    image: hands-on/job-service
    deploy:
      resources:
        limits:
          memory: 512M
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CONFIG_LOCATION=file:/config-repo/application.yml,file:/config-repo/job.yml
      - SPRING_RABBITMQ_USERNAME=${RABBITMQ_USR}
      - SPRING_RABBITMQ_PASSWORD=${RABBITMQ_PWD}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USR}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PWD}
    volumes:
      - $PWD/config-repo:/config-repo
    depends_on:
      rabbitmq:
        condition: service_started
      postgres:
        condition: service_started

  resume:
    build: microservices/resume-service
    image: hands-on/resume-service
    deploy:
      resources:
        limits:
          memory: 512M
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CONFIG_LOCATION=file:/config-repo/application.yml,file:/config-repo/resume.yml
      - SPRING_RABBITMQ_USERNAME=${RABBITMQ_USR}
      - SPRING_RABBITMQ_PASSWORD=${RABBITMQ_PWD}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USR}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PWD}
    volumes:
      - $PWD/config-repo:/config-repo
    depends_on:
      rabbitmq:
        condition: service_started
      postgres:
        condition: service_started

  company:
    build: microservices/company-service
    image: hands-on/company-service
    deploy:
      resources:
        limits:
          memory: 512M
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CONFIG_LOCATION=file:/config-repo/application.yml,file:/config-repo/company.yml
      - SPRING_RABBITMQ_USERNAME=${RABBITMQ_USR}
      - SPRING_RABBITMQ_PASSWORD=${RABBITMQ_PWD}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USR}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PWD}
    volumes:
      - $PWD/config-repo:/config-repo
    depends_on:
      rabbitmq:
        condition: service_started
      postgres:
        condition: service_started

  composite:
    build: microservices/composite-service
    image: hands-on/composite-service
    deploy:
      resources:
        limits:
          memory: 512M
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CONFIG_LOCATION=file:/config-repo/application.yml,file:/config-repo/composite.yml
      - SPRING_RABBITMQ_USERNAME=${RABBITMQ_USR}
      - SPRING_RABBITMQ_PASSWORD=${RABBITMQ_PWD}
    volumes:
      - $PWD/config-repo:/config-repo
    depends_on:
      rabbitmq:
        condition: service_started

  rabbitmq:
    image: rabbitmq:3.8.11-management-alpine
    deploy:
      resources:
        limits:
          memory: 512M
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USR}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PWD}
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 60

  postgres:
    image: postgres:14-alpine
    deploy:
      resources:
        limits:
          memory: 512M
    volumes:
      - ./datastore/pg_data_local:/var/lib/postgresql/data/pgdata
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USR}
      POSTGRES_PASSWORD: ${POSTGRES_PWD}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    restart: on-failure

  gateway:
    build: spring-cloud/gateway
    image: hands-on/gateway
    deploy:
      resources:
        limits:
          memory: 512M
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CONFIG_LOCATION=file:/config-repo/application.yml,file:/config-repo/gateway.yml
      - SERVER_SSL_KEY_STORE_PASSWORD=${GATEWAY_TLS_PWD}
      - SPRING_RABBITMQ_USERNAME=${RABBITMQ_USR}
      - SPRING_RABBITMQ_PASSWORD=${RABBITMQ_PWD}
    volumes:
      - $PWD/config-repo:/config-repo
    ports:
      - "8443:8443"
